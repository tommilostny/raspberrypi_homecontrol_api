@if (Led is not null)
{
    <div class="ledContainer">
        <div class="row">
            <div class="col">
                <h2><strong>LED @Led.Number</strong>: @Led.Name</h2>
                <ul>
                    <li>
                        GPIO pin:
                        <b>
                            @foreach (var pin in Led.Pins)
                            {
                                @pin
                                @(pin != Led.Pins.Last() ? ", " : string.Empty)
                            }
                        </b>
                    </li>
                    <li>Status: <b>@LedStatusAsString()</b></li>
                    @if (!Led.Enabled)
                    {
                        <li class="text-danger">This LED is disabed.</li>
                    }
                </ul>

                @if (Led.Enabled)
                {
                    <button class="btn btn-primary" @onclick="LED_Toggle">Toggle</button>

                    <button class="btn btn-primary" @onclick="() => LED_Blink()" style="margin-left: 5px;">Blink</button>
                    <br><br>
                    <input type="number" @onchange="IntervalInput_ChangeEvent" placeholder="Blink interval (1.0)" class="form-control" />

                    @if (MappedColor is not null)
                    {
                        <hr>
                        <!--
                        <ColorPicker RefreshEvent="() => Led.IsActive = true" Color="MappedColor" Mode="ColorMode.LED" ShowLabels="false" />
                        -->
                    }
                }
            </div>
            @if (!Led.IsRGB)
            {
                <div class="col-4">
                    <img src=@LedStatusImage() class="img-fluid" />
                </div>
            }
        </div>
    </div>
}
else
{
    <FluentProgressRing style="width: 62px;height: 62px; margin:0 auto"></FluentProgressRing>
}
